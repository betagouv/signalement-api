play {

  http.secret.key = ${?APPLICATION_SECRET}
  http.forwarded.trustedProxies = ["0.0.0.0/0", "::/0"]

  filters.enabled += play.filters.cors.CORSFilter
  filters.enabled += play.filters.hosts.AllowedHostsFilter
  filters.enabled += play.filters.https.RedirectHttpsFilter

  filters.hosts {
    allowed = ["."]
  }

  filters.cors {
    allowedHttpMethods = ["OPTIONS", "GET", "POST", "PUT", "DELETE", "HEAD", "PATCH"]
  }

  evolutions {
    enabled = true
    enabled = ${?EVOLUTIONS_ENABLED}
    autoApply = false
    autoApply = ${?EVOLUTIONS_AUTO_APPLY}
    autoApplyDowns = false
    autoApplyDowns = ${?EVOLUTIONS_AUTO_APPLY_DOWNS}
  }

  modules {
    enabled += "utils.silhouette.SilhouetteModule"
    enabled += "tasks.ReportNotificationTaskModule"
    enabled += "tasks.ReminderTaskModule"
    enabled += "actors.EmailActorModule"
    enabled += "actors.EnterpriseSyncActorModule"
    enabled += "actors.ReportsExtractModule"
    enabled += "actors.WebsitesExtractModule"
    enabled += "actors.ReportedPhonesExtractModule"
    enabled += "actors.UploadActorModule"
    enabled += "config.ConfigModule"
    disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
    disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"
  }

  ws.ssl.loose.acceptAnyCertificate = true
}


app {
  protocol = "http"
  protocol = ${?APPLICATION_PROTOCOL}

  api-url = "http://localhost:9000"
  api-url = ${?APPLICATION_PROTOCOL}${?APPLICATION_HOST}

  zone-id = "Europe/Paris"
  website-url = "http://localhost:4200"
  website-url = ${?WEBSITE_URL}

  dashboard-url = "http://localhost:3000/#"
  dashboard-url = ${?DASHBOARD_URL}

  amazon-bucket-name = "bucket-report-dev"
  amazon-bucket-name = ${?BUCKETS_REPORT}

  tmp-directory = ${?TMP_DIR}

  upload {
    allowed-extensions = ["jpg", "jpeg", "pdf", "png", "gif", "docx"]
    av-scan-enabled = true
    av-scan-enabled = ${?AV_SCAN_ENABLED}
  }

  token {
    # See https://javadoc.scijava.org/Java8/java/time/Period.html#parse-java.lang.CharSequence-
    company-init-duration = "P90D"
    company-join-duration = "P60D"
    dgccrf-join-duration = "P60D"
    dgccrf-delay-before-revalidation = "P90D"
  }

  report {
    no-access-reading-delay = "P60D"
    mail-reminder-delay = "P7D"
    report-reminder-by-post-delay = "P28D"
  }

  stats {
    // Starting date used for "% entreprises signalées avec un compte activé"
    // , because no company_access creation_date has been defined before ~ 2021-11-01
    // will be irrelevant as soon as we will have at least 12 months of data
    pro-access-starting-point = "2021-11-01"
    pro-access-starting-point = ${?PRO_ACCESS_STARTING_POINT}
  }

  mail {
    from {
      value = "dev-noreply@signal.conso.gouv.fr"
      value = ${?MAIL_FROM}
    }
    contact-address {
      value = "support@signal.conso.gouv.fr"
      value = ${?MAIL_CONTACT_ADDRESS}
    }
    skip-report-email-validation = false
    skip-report-email-validation = ${?SKIP_REPORT_EMAIL_VALIDATION}
    # DGCCRF emails are restricted to subdomains of this
    ccrf-email-suffix = ".gouv.fr"
    email-provider-blocklist = []
    email-provider-blocklist = ${?EMAIL_PROVIDER_BLOCKLIST}
  }

  task {
    report {
      start-time = "05:00:00"
      start-time = ${?REPORT_NOTIF_TASK_START_TIME}
      start-day = MONDAY
      start-day = ${?REPORT_TASK_WEEKLY_NOTIF_DAY_OF_WEEK}
    }

    reminder {
      start-time = "04:00:00"
      start-time = ${?REMINDER_TASK_START_TIME}
      interval-in-hours = 24 hours
      interval-in-hours = ${?REMINDER_TASK_INTERVAL}
    }
  }
}


akka {
  log-dead-letters = 10
  log-dead-letters-during-shutdown = on
  loglevel = "DEBUG"
}


