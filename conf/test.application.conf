include "application.conf"

test.db {
  user = ${?USER}
  host = "localhost"
  POSTGRES_PASSWORD=password
  port = 5432
  name = "test_signalconso"
}


test.db.user =${?USER}
test.db.host = "localhost"
test.db.port = 5432
test.db.name = "test_signalconso"

flyway {
  host = "localhost"
  port = 5432
  database = "test_signalconso"
  user = ${?USER}
  password =password
  // DATA_LOSS / DESTRUCTIVE / BE AWARE ---- Keep to "false"
  //Be careful when enabling this as it removes the safety net that ensures Flyway does not migrate the wrong database in case of a configuration mistake!
  //This is useful for initial Flyway production deployments on projects with an existing DB.
  //See https://flywaydb.org/documentation/configuration/parameters/baselineOnMigrate for more information
  baseline-on-migrate = false
}


slick.dbs.default.db.properties.url = "postgres://"${test.db.user}"@"${test.db.host}":"${test.db.port}"/"${test.db.name}
slick.dbs.default.db.connectionPool = "disabled"
slick.dbs.default.db.connectionTimeout = 30000


play.mailer.mock = yes
mail {
  outbound-email-filter-regex = ".*"
  email-providers-blocklist = "yopmail.com,another.com"
}

app {
  tmp-directory = "."
  token {
    company-init-duration = "P60D"
    company-join-duration = "P60D"
    dgccrf-join-duration = "P60D"
  }

  report {
    report-reminder-by-post-delay = "P21D"
  }

  enable-rate-limit: false
}

task {

  company-update {
    etablissement-api-url = "http://localhost:9002/api/company/sync"
    etablissement-api-key = "fake_key"
  }

}
